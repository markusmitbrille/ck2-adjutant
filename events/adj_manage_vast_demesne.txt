namespace = ADJ

character_event = {
    id = ADJ.10

    window = EventWindowLongCharacter
    picture = GFX_evt_magnificent_castle
    portrait = event_target:adj_target_bureaucrat

    is_triggered_only = yes
    only_playable = yes
    only_rulers = yes
    ai = no
    
#  ######## ########  ####  ######    ######   ######## ########  
#     ##    ##     ##  ##  ##    ##  ##    ##  ##       ##     ## 
#     ##    ##     ##  ##  ##        ##        ##       ##     ## 
#     ##    ########   ##  ##   #### ##   #### ######   ########  
#     ##    ##   ##    ##  ##    ##  ##    ##  ##       ##   ##   
#     ##    ##    ##   ##  ##    ##  ##    ##  ##       ##    ##  
#     ##    ##     ## ####  ######    ######   ######## ##     ## 

    trigger = { 
        log = "---------------------------------------------------------------------------"
        log = "ADJ.10/trigger"
        log = "--> THIS     = [This.GetFullName]"
        log = "--> ROOT     = [Root.GetFullName]"
        log = "--> FROM     = [From.GetFullName]"
        log = "--> FROMFROM = [FromFrom.GetFullName]"
        log = "---------------------------------------------------------------------------"

        # not currently managing titles
        NOT = { has_character_flag = adj_character_flag_managing_titles }

        # has bureaucrat
        any_courtier_or_vassal = {
            has_minor_title = adj_title_bureaucrat
            liege = { character = PREVPREV }
            
            always = yes
        }

        # has vast demesne
        over_max_demesne_size > 1
    }
    
#  #### ##     ## ##     ## ######## ########  ####    ###    ######## ######## 
#   ##  ###   ### ###   ### ##       ##     ##  ##    ## ##      ##    ##       
#   ##  #### #### #### #### ##       ##     ##  ##   ##   ##     ##    ##       
#   ##  ## ### ## ## ### ## ######   ##     ##  ##  ##     ##    ##    ######   
#   ##  ##     ## ##     ## ##       ##     ##  ##  #########    ##    ##       
#   ##  ##     ## ##     ## ##       ##     ##  ##  ##     ##    ##    ##       
#  #### ##     ## ##     ## ######## ########  #### ##     ##    ##    ######## 

    immediate = {
        log = "---------------------------------------------------------------------------"
        log = "ADJ.10/immediate"
        log = "--> THIS     = [This.GetFullName]"
        log = "--> ROOT     = [Root.GetFullName]"
        log = "--> FROM     = [From.GetFullName]"
        log = "--> FROMFROM = [FromFrom.GetFullName]"
        log = "---------------------------------------------------------------------------"

        set_character_flag = adj_character_flag_managing_titles

        # clear event targets from previous suggestions
        clear_event_target = adj_target_capital_barony
        clear_event_target = adj_target_capital_county
        clear_event_target = adj_target_capital_duchy
        clear_event_target = adj_target_capital_kingdom
        clear_event_target = adj_target_bureaucrat
        clear_event_target = adj_target_title
        clear_event_target = adj_target_candidate_dynasty
        clear_event_target = adj_target_candidate_courtier
        clear_event_target = adj_target_candidate_vassal

        # find capital barony, county, duchy, kingdom
        ROOT = {
            capital_holding = {
                save_event_target_as = adj_target_capital_barony
                dejure_liege_title = {
                    save_event_target_as = adj_target_capital_county
                    dejure_liege_title = {
                        save_event_target_as = adj_target_capital_duchy
                        dejure_liege_title = {
                            save_event_target_as = adj_target_capital_kingdom
                        }
                    }
                }
            }
        }

        # find bureaucrat
        random_courtier_or_vassal = {
            limit = {
                has_minor_title = adj_title_bureaucrat
                liege = { character = PREVPREV }
            }

            save_event_target_as = adj_target_bureaucrat
        }

        # find target title
        random_demesne_title = {
            limit = {
                can_be_given_away = yes
                NOT = { higher_tier_than = KING }
                NOT = { ROOT = { primary_title = { title = PREVPREV } } }

                # not the capital holding
                NAND = {
                    tier = BARON
                    title = event_target:adj_target_capital_barony
                }
                
                # not the capital county
                NAND = {
                    tier = COUNT
                    title = event_target:adj_target_capital_county
                }

                # not the capital duchy
                NAND = {
                    tier = DUKE
                    title = event_target:adj_target_capital_duchy
                }

                # not the capital kingdom
                NAND = {
                    tier = KING
                    title = event_target:adj_target_capital_kingdom
                }

                # not a duchy without count-tier dejure vassals
                NAND = {
                    tier = DUKE
                    any_direct_de_jure_vassal_title	= {
                        holder_scope = { real_tier = COUNT }
                        
                        count < 1
                    }
                }

                # not a kingdom without duke-tier dejure vassals
                NAND = {
                    tier = KING
                    any_direct_de_jure_vassal_title	= {
                        holder_scope = { real_tier = DUKE }
                        
                        count < 1
                    }
                }
            }

            preferred_limit = {
                tier = BARON
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_kingdom }
            }
            preferred_limit = {
                tier = COUNT
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_kingdom }
            }
            preferred_limit = {
                tier = BARON
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_duchy }
            }
            preferred_limit = {
                tier = COUNT
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_duchy }
            }
            preferred_limit = {
                tier = BARON
            }
            preferred_limit = {
                tier = COUNT
            }
            preferred_limit = {
                tier = DUKE
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_kingdom }
            }
            preferred_limit = {
                tier = DUKE
            }

            save_event_target_as = adj_target_title
        }

        # find a dynasty member
        random_dynasty_member = {
            limit = {
                is_ruler = no
                is_landed_title_allowed = event_target:adj_target_title
            }

            preferred_limit = {
                trait = content
            }
            
            preferred_limit = {
                opinion = { who = ROOT value > 75}
            }
            preferred_limit = {
                opinion = { who = ROOT value > 50}
            }
            preferred_limit = {
                opinion = { who = ROOT value > 25}
            }
            preferred_limit = {
                opinion = { who = ROOT value > 0}
            }
            preferred_limit = {
                opinion = { who = ROOT value > -25}
            }
            preferred_limit = {
                opinion = { who = ROOT value > -50}
            }
            preferred_limit = {
                opinion = { who = ROOT value > -75}
            }

            save_event_target_as = adj_target_candidate_dynasty
        }

        # find a courtier
        random_courtier = {
            limit = {
                is_ruler = no
                is_landed_title_allowed = event_target:adj_target_title
                NOT = { dynasty = ROOT }
            }

            preferred_limit = {
                trait = content
            }
            
            preferred_limit = {
                opinion = { who = ROOT value > 75}
            }
            preferred_limit = {
                opinion = { who = ROOT value > 50}
            }
            preferred_limit = {
                opinion = { who = ROOT value > 25}
            }
            preferred_limit = {
                opinion = { who = ROOT value > 0}
            }
            preferred_limit = {
                opinion = { who = ROOT value > -25}
            }
            preferred_limit = {
                opinion = { who = ROOT value > -50}
            }
            preferred_limit = {
                opinion = { who = ROOT value > -75}
            }

            save_event_target_as = adj_target_candidate_courtier
        }

        # FIXME: steaming pile of shit crashes the entire event script
        # find a vassal who desires the duchy or kingdom
        # event_target:adj_target_title = {
        #     if = {
        #         # for duchies ...
        #         limit = { tier = DUKE }
        #         random_direct_de_jure_vassal_title = {
        #             # ... only counts are eligible
        #             limit = { holder_scope = { real_tier = COUNT } }

        #             # prefer one-title counts
        #             preferred_limit = {
        #                 holder_scope = {
        #                     any_demesne_title = {
        #                         tier = COUNT
                                
        #                         count < 2
        #                     }
        #                 }
        #             }

        #             # prefer counts constrained to the duchy
        #             preferred_limit = {
        #                 holder_scope = {
        #                     any_demesne_title = {
        #                         tier = COUNT
        #                         NOT = { dejure_liege_title = event_target:adj_target_title }

        #                         count < 1
        #                     }
        #                 }
        #             }

        #             holder_scope = { save_event_target_as = adj_target_candidate_vassal }
        #         }
        #     }
        #     else_if = {
        #         # for kingdoms ...
        #         limit = { tier = KING }
        #         random_direct_de_jure_vassal_title = {
        #             # ... only dukes are eligible
        #             limit = { holder_scope = { real_tier = DUKE } }

        #             # prefer one-title dukes
        #             preferred_limit = {
        #                 holder_scope = {
        #                     any_demesne_title = {
        #                         tier = DUKE
                                
        #                         count < 2
        #                     }
        #                 }
        #             }

        #             # prefer dukes constrained to the kingdom
        #             preferred_limit = {
        #                 holder_scope = {
        #                     any_demesne_title = {
        #                         tier = DUKE
        #                         NOT = { dejure_liege_title = event_target:adj_target_title }
                                
        #                         count < 1
        #                     }
        #                 }
        #             }

        #             holder_scope = { save_event_target_as = adj_target_candidate_vassal }
        #         }
        #     }
        # }

        log = "---------------------------------------------------------------------------"
        log = "ADJ.10/immediate (end)"
        log = "--> adj_target_capital_barony     = [adj_target_capital_barony.GetFullName]"
        log = "--> adj_target_capital_county     = [adj_target_capital_county.GetFullName]"
        log = "--> adj_target_capital_duchy      = [adj_target_capital_duchy.GetFullName]"
        log = "--> adj_target_capital_kingdom    = [adj_target_capital_kingdom.GetFullName]"
        log = "--> adj_target_bureaucrat         = [adj_target_bureaucrat.GetFullName]"
        log = "--> adj_target_title              = [adj_target_title.GetFullName]"
        log = "--> adj_target_candidate_dynasty  = [adj_target_candidate_dynasty.GetFullName]"
        log = "--> adj_target_candidate_courtier = [adj_target_candidate_courtier.GetFullName]"
        log = "--> adj_target_candidate_vassal   = [adj_target_candidate_vassal.GetFullName]"
        log = "---------------------------------------------------------------------------"
    }

#  ########  ########  ######   ######  ########  #### ########  ######## ####  #######  ##    ##  ######  
#  ##     ## ##       ##    ## ##    ## ##     ##  ##  ##     ##    ##     ##  ##     ## ###   ## ##    ## 
#  ##     ## ##       ##       ##       ##     ##  ##  ##     ##    ##     ##  ##     ## ####  ## ##       
#  ##     ## ######    ######  ##       ########   ##  ########     ##     ##  ##     ## ## ## ##  ######  
#  ##     ## ##             ## ##       ##   ##    ##  ##           ##     ##  ##     ## ##  ####       ## 
#  ##     ## ##       ##    ## ##    ## ##    ##   ##  ##           ##     ##  ##     ## ##   ### ##    ## 
#  ########  ########  ######   ######  ##     ## #### ##           ##    ####  #######  ##    ##  ######  

    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = BARON
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_kingdom }
            }
        }
        text = adj_event_desc_10_baron_not_capital_kingdom
        picture = GFX_evt_emissary
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = COUNT
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_kingdom }
            }
        }
        text = adj_event_desc_10_count_not_capital_kingdom
        picture = GFX_evt_emissary
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = BARON
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_duchy }
            }
        }
        text = adj_event_desc_10_baron_not_capital_duchy
        picture = GFX_evt_emissary
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = COUNT
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_duchy }
            }
        }
        text = adj_event_desc_10_count_not_capital_duchy
        picture = GFX_evt_emissary
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = BARON
            }
        }
        text = adj_event_desc_10_baron
        picture = GFX_evt_emissary
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = COUNT
            }
        }
        text = adj_event_desc_10_count
        picture = GFX_evt_emissary
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = DUKE
                NOT = { de_jure_liege_or_above = event_target:adj_target_capital_kingdom }
            }
        }
        text = adj_event_desc_10_duke_not_capital_kingdom
        picture = GFX_evt_magnificent_castle
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = DUKE
            }
        }
        text = adj_event_desc_10_duke
        picture = GFX_evt_magnificent_castle
    }
    desc = {
        trigger = {
            event_target:adj_target_title = {
                tier = KING
            }
        }
        text = adj_event_desc_10_king
        picture = GFX_evt_magnificent_castle
    }

#   #######  ########  ######## ####  #######  ##    ##  ######  
#  ##     ## ##     ##    ##     ##  ##     ## ###   ## ##    ## 
#  ##     ## ##     ##    ##     ##  ##     ## ####  ## ##       
#  ##     ## ########     ##     ##  ##     ## ## ## ##  ######  
#  ##     ## ##           ##     ##  ##     ## ##  ####       ## 
#  ##     ## ##           ##     ##  ##     ## ##   ### ##    ## 
#   #######  ##           ##    ####  #######  ##    ##  ######  

    option = {
        name = "adj_event_opt_10_dynasty"
        trigger = {
            event_target:adj_target_title = { OR = { tier = BARON tier = COUNT } }
            event_target:adj_target_candidate_dynasty = { always = yes }
        }

        event_target:adj_target_candidate_dynasty = {
            grant_title = event_target:adj_target_title
        }

        # recurse event
        clr_character_flag = adj_character_flag_managing_titles
        character_event = { id = ADJ.10 tooltip = adj_evt_tooltip_10_recurse }
    }
    
    option = {
        name = "adj_event_opt_10_courtier"
        trigger = {
            event_target:adj_target_title = { OR = { tier = BARON tier = COUNT } }
            event_target:adj_target_candidate_courtier = { always = yes }
        }

        event_target:adj_target_candidate_courtier = {
            grant_title = event_target:adj_target_title
        }

        # recurse event
        character_event = { id = ADJ.10 tooltip = adj_evt_tooltip_10_recurse }
    }
    
    option = {
        name = "adj_event_opt_10_new"
        trigger = {
            event_target:adj_target_title = { OR = { tier = BARON tier = COUNT } }
        }
        
        character_event = { id = ADJ.11 tooltip = adj_evt_tooltip_11 }

        # recurse event
        clr_character_flag = adj_character_flag_managing_titles
        ROOT = { character_event = { id = ADJ.10 tooltip = adj_evt_tooltip_10_recurse } }
    }

    option = {
        name = {
            text = "adj_event_opt_10_vassal_duke"
            trigger = {
                event_target:adj_target_title = { tier = DUKE }
            }
        }
        name = {
            text = "adj_event_opt_10_vassal_king"
            trigger = {
                event_target:adj_target_title = { tier = KING }
            }
        }
        trigger = {
            event_target:adj_target_title = { OR = { tier = DUKE tier = KING } }
            event_target:adj_target_candidate_vassal = { always = yes }
        }

        event_target:adj_target_candidate_vassal = {
            grant_title = event_target:adj_target_title
        }

        # recurse event
        clr_character_flag = adj_character_flag_managing_titles
        character_event = { id = ADJ.10 tooltip = adj_evt_tooltip_10_recurse }
    }

    option = {
        name = "adj_event_opt_10_abort"
        clr_character_flag = adj_character_flag_managing_titles
        custom_tooltip = { text = "adj_event_opt_10_abort_tooltip" }
    }
}

character_event = {
    id = ADJ.11

    hide_window = yes
    is_triggered_only = yes
    only_playable = yes
    only_rulers = yes
    ai = no

    trigger = {
        event_target:adj_target_title = { always = yes }
    }

    immediate = {
        if = {
            limit = { event_target:adj_target_title = { holding_type = castle } }
            create_random_soldier = {
                dynasty = none
                race = ROOT
                religion = ROOT
                culture = ROOT
                female = 20
                fertility = 2
                health = 7
                trait = content
                attributes = {
                    martial = 12
                    diplomacy = 8
                    stewardship = 6
                    intrigue = 6
                    learning = 6
                }
            }
        }
        else_if = {
            limit = { event_target:adj_target_title = { holding_type = city } }
            create_random_steward = {
                dynasty = none
                race = ROOT
                religion = ROOT
                culture = ROOT
                female = 10
                fertility = 2
                health = 7
                trait = content
                attributes = {
                    martial = 6
                    diplomacy = 8
                    stewardship = 12
                    intrigue = 6
                    learning = 6
                }
            }
        }
        else_if = {
            limit = { event_target:adj_target_title = { holding_type = temple } }
            create_random_steward = {
                dynasty = none
                race = ROOT
                religion = ROOT
                culture = ROOT
                female = no
                fertility = 2
                health = 7
                trait = content
                attributes = {
                    martial = 6
                    diplomacy = 8
                    stewardship = 6
                    intrigue = 6
                    learning = 12
                }
            }
        }
        else = {
            create_random_diplomat = {
                dynasty = none
                race = ROOT
                religion = ROOT
                culture = ROOT
                female = no
                fertility = 2
                health = 7
                trait = content
                attributes = {
                    martial = 6
                    diplomacy = 12
                    stewardship = 6
                    intrigue = 6
                    learning = 6
                }
            }
        }

        new_character = {
            grant_title = event_target:adj_target_title
        }
    }
}